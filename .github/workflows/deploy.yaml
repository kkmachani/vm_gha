name: Using VM for workflow

on:   
 
 workflow_dispatch:

 push:
    branches:
        - main
        - 'feature/*'
           
jobs:
    # docker:
    #   strategy:
    #     fail-fast: false # to stop the running jobs when the job is failure
    #     matrix:
    #       os: [self-hosted,windows-latest]
    #       exclude: 
    #         - os: windows-latest

    #   runs-on: ${{ matrix.os }}
    #   environment: trial
      # env:
      #   DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      #   DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      #   IMAGE_NAME: ${{ secrets.IMAGE_NAME }}
      #   TAG: ${{ secrets.TAG }}
      #   CONTAINER_NAME: ${{ secrets.CONTAINER_NAME }}

      # steps:
      #   - name: Checkout repo
      #     uses: actions/checkout@v4

      #   - name: Login to Docker Hub
      #     run: |
      #       echo $DOCKER_PASSWORD | docker login -u  $DOCKER_USERNAME --password-stdin
        
      #   - name: Build Docker image
      #     run: |
      #       docker build -t $IMAGE_NAME:$TAG .

      #   - name: Tag the Image
      #     run: |
      #       echo "Tagging the image $IMAGE_NAME:$TAG with the Docker Hub repo"
      #       docker tag  $IMAGE_NAME:$TAG  $DOCKER_USERNAME/$IMAGE_NAME:$TAG
        
      #   - name: Push the Image to Dockerhub
      #     run: |
            
      #       docker push $DOCKER_USERNAME/$IMAGE_NAME:$TAG

      #   - name: Creating a container
      #     run: docker run --name $CONTAINER_NAME -d -p 8080:80 $DOCKER_USERNAME/$IMAGE_NAME:$TAG
    
    acr-deploy:
      environment: trial
      env:
        IMAGE_NAME: ${{ secrets.IMAGE_NAME }}
        TAG: ${{ secrets.TAG }}
        CONTAINER_NAME: ${{ secrets.CONTAINER_NAME }}
      strategy:
        matrix:
         os: [self-hosted,windows-latest]
         exclude: 
           - os: windows-latest
      runs-on: ${{ matrix.os }}
      steps:
        - name: checkout repo
          uses: actions/checkout@v4
        
        - name: Docker Login
          uses: azure/docker-login@v1
          with:
            login-server: ${{ env.ACR_SERVER }}
            username: ${{ env.ACR_USER}}
            password: ${{ env.ACR_PASSWORD }}
 
        - name: Build the Image
          run:  |
            docker build -f ./Dockerfile -t ${{ env.ACR_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.TAG }} .

        - name: Push the Image
          run: |
            docker push ${{ env.ACR_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.TAG }}

        
        
  
        
        
        